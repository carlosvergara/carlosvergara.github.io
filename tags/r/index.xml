<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Carlos Vergara-Hernández</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Carlos Vergara-Hernández</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <copyright>&amp;copy; 2017 Carlos Vergara-Hernández</copyright>
    <lastBuildDate>Mon, 13 Mar 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/r/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Paquetes de R</title>
      <link>/project/r/</link>
      <pubDate>Mon, 13 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/project/r/</guid>
      <description>

&lt;h2 id=&#34;fisabior&#34;&gt;fisabior&lt;/h2&gt;

&lt;p&gt;Ahora mismo estoy trabajando en un paquete para dar un marco de trabajo común al grupo en el que me incluyo. Aunque hay paquetes que tratan de hacer eso mismo (me viene a la cabeza &lt;code&gt;ProjectTemplate&lt;/code&gt;), la verdad es que no se ajustaba exactamente a lo que estábamos buscando, así que nos animamos a crear un paquete con nuestras milongas. Puedes consultarlo a través de la cuenta institucional de &lt;a href=&#34;https://github.com/fisabio/&#34; target=&#34;_blank&#34;&gt;FISABIO en GitHub&lt;/a&gt; y puedes copiar lo que te dé la real gana o usarlo como y para lo que quieras.&lt;/p&gt;

&lt;h2 id=&#34;este-sitio&#34;&gt;Este sitio&lt;/h2&gt;

&lt;p&gt;¡Sí! Este sitio también está hecho directamente desde &lt;code&gt;R&lt;/code&gt;, gracias al paquete &lt;code&gt;blogdown&lt;/code&gt; y a &lt;a href=&#34;https://gohugo.io/overview/introduction/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;. Para usarlo, primero deberías instalarlo a través del paquete &lt;code&gt;devtools&lt;/code&gt; con la instrucción &lt;code&gt;devtools::install_github(rstudio/blogdown)&lt;/code&gt;. Para crear un sitio que use el mismo tema, puedes usar el comando &lt;code&gt;blogdown::new_site(theme = &amp;quot;gcushen/hugo-academic&amp;quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Al igual que antes, si lo deseas puedes utilizar el material a tu voluntad, el cual está colgado en mi cuenta de &lt;a href=&#34;https://github.com/carlosvergara/carlosvergara.github.io&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Informes dinámicos con knitr</title>
      <link>/post/knitr/</link>
      <pubDate>Thu, 07 May 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/knitr/</guid>
      <description>&lt;p&gt;Hola muchachada.&lt;/p&gt;
&lt;p&gt;Hoy la palangana viene repleta de… informes, ha oído usted bien (popularidad a tope).&lt;/p&gt;
&lt;div id=&#34;erase-una-vez-algo-llamado-ciencia&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Érase una vez… algo llamado ciencia&lt;/h2&gt;
&lt;p&gt;Pues eso, que esto de la ciencia está bastante bien. En serio, hay un punto en el que, tras hacer un par de análisis inspirados detectas un patrón y te viene un subidón de la hostia. A ver, no me malinterpetes, rara vez esa sensación acaba en algo mínimamente productivo, aunque la sensación mola.&lt;/p&gt;
&lt;p&gt;Bien, pues ahora empiezan a aparecer problemas, porque por si no lo sabías, esto de la ciencia parece ser que es algo colectivo&lt;/p&gt;
&lt;p&gt;Hasta hace bien poco, preparar un informe con las salidas de un análisis estadístico se me hacía poco menos que un castigo: sentía que mi dedicación caía en saco roto cada vez que había que realizar cambios en él tras pasar el primer panel de revisión, lo cual ocurre siempre. No obstante, eso fue hasta que me topé con la librería &lt;code&gt;knitr&lt;/code&gt; de &lt;code&gt;R&lt;/code&gt; (la cual es, sencillamente, maravillosa): ahora, mis informes salen al vuelo y no me importa nada si se añaden, retiran o editan variables de la base de datos o análisis estadísticos: el informe se actualizará fácilmente y quedará bien, sí o sí.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;manejo-de-knitr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Manejo de &lt;code&gt;knitr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Tras las buenas palabras de presentación, veamos qué ofrece &lt;code&gt;knitr&lt;/code&gt;. Según la documentación, se trata de una herramienta genérica para generar informes dinámicos con &lt;code&gt;R&lt;/code&gt;, y aunque suene un poco raro, esto implica dos frentes, así habrá que discutirlos algo más en profundidad.&lt;/p&gt;
&lt;div id=&#34;a-hostias-con-el-informe&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;A hostias con el informe&lt;/h4&gt;
&lt;p&gt;Pongámonos en situación: has realizado un análisis estadístico sobre una base de datos y estás preparando el informe. Te pasas varias horas (o días, en función de la base de datos) copiando y pegando tablas y gráficos o, mucho peor, sufriendo la alienación que supone escribir todos los valores a mano. Tras ello, le llega el turno a la maquetación para que todo sea bonito y el informe solo necesite un lacito para ser enviado a quien corresponda, y esto también requiere un gran esfuerzo.&lt;/p&gt;
&lt;p&gt;Sin embargo, es habitual que a alguien se le ocurra algo que puede mejorar el análisis y el producto final, aunque solo con pensar en pasar una vez más por todo el proceso de &lt;em&gt;copia-pega&lt;/em&gt; por un cambio mínimo, puede amargarte tras de tanta dedicación. Y lo peor es que todo empieza con buenas intenciones y algo parecido a: &lt;strong&gt;y si…&lt;/strong&gt; &lt;em&gt;recodificamos esta variable&lt;/em&gt;, &lt;strong&gt;y si…&lt;/strong&gt; &lt;em&gt;en tal modelo probamos a introducir un factor aleatorio y vemos cómo quedan los residuos&lt;/em&gt; o, en el peor de los casos, &lt;strong&gt;y si…&lt;/strong&gt; &lt;em&gt;repetimos este análisis pero haciendo el pino mientras recitamos el Quijote&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;¿Alguna vez te ha pasado? Amigo investigador: no estás solo, y es precisamente ahí donde los informes dinámicos pueden sacarnos del apuro. La idea es muy simple: integrar trozos de código de análisis y las salidas de &lt;code&gt;R&lt;/code&gt; que producen (tanto texto como gráficos) en el informe que se esté preparando, de una manera natural y bastante fácil. ¿Tras la revisión de los compañeros se plantean cambios en el análisis? No pasa nada: al tener el código integrado el informe se genera de nuevo automáticamente con el código y las salidas actualizadas. Esto, que en principio parece poco relevante, implica que solo has de concentrarte en tu investigación: pensar en la mejor forma de análisis y en la interpretación de los resultados.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;herramienta-generica&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Herramienta genérica&lt;/h4&gt;
&lt;p&gt;En &lt;code&gt;R&lt;/code&gt; ya existía una librería para realizar informes dinámicos, pero estaba orientada exclusivamente a LaTeX. Con &lt;code&gt;knitr&lt;/code&gt; se pueden crear elementos en LaTeX, Markdown o HTML (y de ahí podemos pasarlos con &lt;a href=&#34;http://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt; a un editor de textos del tipo &lt;em&gt;WYSIWYG&lt;/em&gt; como &lt;a href=&#34;https://www.libreoffice.org/discover/writer/&#34;&gt;LO Writer&lt;/a&gt; o MS Word). Además, si a esto le añadimos las facilidades que ofrece &lt;a href=&#34;http://www.rstudio.com/&#34;&gt;RStudio&lt;/a&gt; a la hora de trabajar con &lt;code&gt;R&lt;/code&gt; y &lt;code&gt;knitr&lt;/code&gt;, las posibilidades son increíbles (incluyendo presentaciones con un acabado sensacional con &lt;a href=&#34;http://rmarkdown.rstudio.com/ioslides_presentation_format.html&#34;&gt;&lt;em&gt;ioslides&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;http://rmarkdown.rstudio.com/slidy_presentation_format.html&#34;&gt;&lt;em&gt;slidy&lt;/em&gt;&lt;/a&gt; o &lt;a href=&#34;http://rmarkdown.rstudio.com/beamer_presentation_format.html&#34;&gt;&lt;em&gt;beamer&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;trabajando-en-markdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Trabajando en Markdown&lt;/h2&gt;
&lt;p&gt;A la hora de escribir documentos que no requieran un manejo muy avanzado, &lt;a href=&#34;http://stackoverflow.com/editing-help&#34;&gt;Markdown&lt;/a&gt; es sin duda la elección —p. ej., y sin ir más lejos, todo lo que escribo en esta web está escrito en &lt;a href=&#34;https://github.com/carlosvergara/carlosvergara.github.io/tree/master/_Rmd&#34;&gt;Markdown directamente desde RStudio&lt;/a&gt; (el cual ofrece la posibilidad de conectar con &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;)—.&lt;/p&gt;
&lt;p&gt;Al trabajar con &lt;code&gt;knitr&lt;/code&gt; en este entorno, en primer lugar hay que identificar los trozos de código, y para ello escribimos &lt;code&gt;```{r}&lt;/code&gt;, indicando que comienza código, y &lt;code&gt;```&lt;/code&gt; para indicar el final de la pieza de código. En la &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;web del autor de &lt;code&gt;knitr&lt;/code&gt;&lt;/a&gt; podrás encontrar un montón de ejemplos y de opciones útiles para obtener la salida deseada: p. ej., imagina que deseas mostrar únicamente un resultado y omitir el código, pues la solución es añadir &lt;code&gt;echo = F&lt;/code&gt; en el encabezado (&lt;code&gt;```{r echo = F}&lt;/code&gt;); o que deseas que la figura que se produzca con un &lt;code&gt;plot(x)&lt;/code&gt; tenga un tamaño de 10 x 5, pues &lt;code&gt;```{r fig.width = 10, fig.height = 5}&lt;/code&gt;. Como ves, la sintaxis es muy sencilla y bastante intuitiva.&lt;/p&gt;
&lt;div id=&#34;un-ejemplo&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Un ejemplo&lt;/h4&gt;
&lt;p&gt;En primer lugar crearemos una base de datos ficticia (tres tratamientos para, p. ej., el exceso de colesterol) y se describirá la variable dependiente en función de la independiente&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(knitr)
library(dplyr)
set.seed(1)
example &amp;lt;- data.frame(
  trat = gl(3, 100, labels = c(&amp;#39;Trat. 1&amp;#39;, &amp;#39;Trat. 2&amp;#39;, &amp;#39;Trat. 3&amp;#39;)),
  chol = as.vector(sapply(c(200, 160, 210), function(x) {
    rnorm(100, mean = x, sd = x/10)
    }))
)

mi_summary_table &amp;lt;- example %&amp;gt;%
  group_by(Tratamiento = trat) %&amp;gt;%
  summarise(N = n(),
            Media = mean(chol),
            SD = sd(chol),
            Mediana = median(chol),
            P25 = quantile(chol, 0.25),
            P75 = quantile(chol, 0.75),
            IQR = IQR(chol))

kable(mi_summary_table, digits = 2, caption = &amp;#39;Descriptiva según tratamiento&amp;#39;, align = &amp;quot;c&amp;quot;)  &lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:tabla&#34;&gt;Table 1: &lt;/span&gt;Descriptiva según tratamiento&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;Tratamiento&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;N&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Media&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;SD&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Mediana&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;P25&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;P75&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;IQR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Trat. 1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;202.18&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;17.96&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;202.28&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;190.12&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;213.83&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;23.72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Trat. 2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;159.40&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;15.33&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;157.16&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;149.58&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;168.01&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;18.43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Trat. 3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;210.62&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;21.72&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;209.97&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200.44&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;224.67&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;24.23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¿Has visto qué sencillez? Al combinar las capacidades para jugar con los datos de &lt;code&gt;dplyr&lt;/code&gt; y las posibilidades que ofrece &lt;code&gt;knitr&lt;/code&gt;, el resultado es una pasada. Vamos a ver qué tal se defiende con unos gráficos en &lt;code&gt;ggplot2&lt;/code&gt;, por ejemplo con un diagrama de cajas y un gráfico de densidades.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(grid)
library(gridExtra)
mi_theme &amp;lt;- theme(
  axis.title = element_text(size = 16, face = &amp;#39;bold&amp;#39;, family = &amp;#39;Times&amp;#39;),
  axis.text = element_text(size = 12, face = &amp;#39;plain&amp;#39;, family = &amp;#39;Times&amp;#39;),
  legend.text = element_text(face = &amp;#39;plain&amp;#39;, size = 12, family = &amp;#39;Times&amp;#39;),
  legend.title = element_text(face = &amp;#39;bold&amp;#39;, size = 16, family = &amp;#39;Times&amp;#39;),
  axis.title.y = element_text(vjust = 1),
  axis.title.x = element_text(vjust = 0),
  legend.position = c(.9, .8)
)
mi_box &amp;lt;- ggplot(example, aes(trat, chol)) + 
  geom_boxplot() + 
  theme_classic() +
  labs(x = &amp;#39;Tratamiento&amp;#39;, y = &amp;#39;Colesterol (mg./dl.)&amp;#39;, title = &amp;#39;&amp;#39;) +
  scale_y_continuous(limits = c(120, 260), breaks = seq(120, 260, 20)) +
  mi_theme
mi_den &amp;lt;- ggplot(example, aes(colour = trat, x = chol)) + geom_line(stat = &amp;#39;density&amp;#39;) +
  theme_classic() + scale_x_continuous(limits = c(120, 260), breaks = seq(120, 260, 20)) +
  labs(x = &amp;#39;Colesterol (mg./dl.)&amp;#39;, y = &amp;#39;Densidad&amp;#39;, title = &amp;#39;&amp;#39;, colour = &amp;#39;&amp;#39;) +
  mi_theme
grid.arrange(mi_box, mi_den, nrow = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/knitr_files/figure-html/box.den-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sin duda, esto es adictivo. Pero ¿qué tal se ven los gráficos básicos, p. ej., de un ANOVA?&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_aov &amp;lt;- aov(chol ~ trat, example)
par(mar = c(4, 4, 1, 1), bty = &amp;#39;l&amp;#39;, family = &amp;#39;serif&amp;#39;, mgp = c(2, 0.5, 0), xaxs = &amp;#39;i&amp;#39;, yaxs = &amp;#39;i&amp;#39;)
layout(matrix(c(1, 2, 1, 2), byrow = T, ncol = 2))
plot(mi_aov$fitted.values, mi_aov$residuals, xlab = &amp;#39;Valores ajustados&amp;#39;,
                  ylab = &amp;#39;Residuos&amp;#39;, cex = 1.5, cex.lab = 1.3, col = 4,
                  xlim = c(150, 215), ylim = c(-60, 60))
abline(h = 0, lty = 2)
lines(lowess(mi_aov$fitted.values, mi_aov$residuals), col = 2)
qqnorm(mi_aov$residuals, xlab = &amp;#39;Cuantiles teóricos&amp;#39;, main = &amp;#39;&amp;#39;, cex = 1.5, 
                    ylab = &amp;#39;Cuantiles muestrales&amp;#39;, cex.lab = 1.3, col = 4,
                    xlim = c(-3, 3), ylim = c(-60, 60))
qqline(mi_aov$residuals, col = 2)
abline(h = 0, lty = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/knitr_files/figure-html/aov.g-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(mi_aov)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              Df Sum Sq Mean Sq F value Pr(&amp;gt;F)    
## trat          2 150867   75433   219.9 &amp;lt;2e-16 ***
## Residuals   297 101904     343                   
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Las figuras quedan genial, aunque la impresión de la tabla de ANOVA es bastante cutre. ¿Se puede pasar por &lt;code&gt;kable&lt;/code&gt; y mejorarla? Sí, pero previamente hay que hacer algunas modificaciones.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_aov &amp;lt;- anova(mi_aov)
colnames(mi_aov) &amp;lt;- c(&amp;#39;Grados de libertad&amp;#39;, &amp;#39;Suma de cuadrados&amp;#39;, &amp;#39;Media de cuadrados&amp;#39;, &amp;#39;Valor F&amp;#39;, &amp;#39;Valor p&amp;#39;)
rownames(mi_aov) &amp;lt;- c(&amp;#39;Nivel&amp;#39;, &amp;#39;Residuos&amp;#39;)
kable(mi_aov, digits = 2, caption = &amp;#39;Tabla del ANOVA&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;(#tab:aov.tab)Tabla del ANOVA&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Grados de libertad&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Suma de cuadrados&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Media de cuadrados&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Valor F&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Valor p&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Nivel&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;150866.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;75433.29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;219.85&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Residuos&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;297&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;101904.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;343.11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;proximos-pasos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Próximos pasos&lt;/h2&gt;
&lt;p&gt;Ya conoces un poco mejor la forma de trabajar con Markdown en &lt;code&gt;R&lt;/code&gt; gracias a &lt;code&gt;knitr&lt;/code&gt;. En un próximo artículo veremos cómo configurar algunas opciones de &lt;code&gt;knitr&lt;/code&gt; al comienzo del documento, y evitar así estar repitiendo los mismos encabezados una y otra vez. Asimismo, también me gustaría hablar un poquito sobre LaTeX y mostrar un una mínima parte de su potencial a la hora de encarar documentos largos y complejos.&lt;/p&gt;
&lt;p&gt;Por ahora eso es todo. Pasa un buen día. :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;He añadido algunas opciones extra en el encabezado de las piezas de código, tales como &lt;code&gt;message = F&lt;/code&gt; y &lt;code&gt;warning = F&lt;/code&gt;, de manera que se evita la aparición de mensajes que distraen de los datos.&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Una forma más sencilla para echar un vistazo rápido a estos gráficos (sin tanta floritura) es con &lt;code&gt;par(mfrow = c(1, 2))&lt;/code&gt; seguido de &lt;code&gt;plot(mi.aov, which = c(1, 2))&lt;/code&gt;.&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R en Linux</title>
      <link>/post/instalar-r-linux/</link>
      <pubDate>Wed, 06 May 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/instalar-r-linux/</guid>
      <description>&lt;p&gt;Hola muchachada.&lt;/p&gt;
&lt;p&gt;Hoy la palangana viene repleta de… paquetes de &lt;code&gt;R&lt;/code&gt;, y por si fuera poco atractivo para cualquier alma de cántaro, paquetes de &lt;code&gt;R&lt;/code&gt; en Linux.&lt;/p&gt;
&lt;p&gt;Resulta que acabo de actualizar unos paquetes de &lt;code&gt;R&lt;/code&gt; y se me ha ocurrido escribir un poco al respecto. No me gusta abarcar más de lo que me corresponde, así que solo voy a explicar cómo actualizar el programa de forma automática, y cómo sorteo alguna que otra incomodidad de la instalación y actualización de paquetes.&lt;/p&gt;
&lt;div id=&#34;instalar-y-actualizar-r-de-forma-automatica&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Instalar y actualizar R de forma automática&lt;/h2&gt;
&lt;p&gt;Para instalar o mantener actualizado &lt;code&gt;R&lt;/code&gt; de manera automática hay que realizar unos sencillos pasos que dependen de la distro de Linux que estés utilizando. Por ejemplo, si usas, como tantísima gente, Ubuntu, &lt;a href=&#34;http://cran.r-project.org/bin/linux/ubuntu/README&#34;&gt;tienes unas instrucciones muy claras&lt;/a&gt;:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Edita el archivo &lt;code&gt;sources.list&lt;/code&gt; con tu editor favorito. En una terminal: &lt;code&gt;sudo atom /etc/apt/sources.list&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Añade una entrada en el archivo con el URL del &lt;em&gt;mirror&lt;/em&gt; de CRAN preferido, mediante &lt;code&gt;deb https://cloud.r-project.org/bin/linux/ubuntu/ xenial/&lt;/code&gt;, cambiando &lt;code&gt;xenial&lt;/code&gt; por la versión que estés usando (&lt;em&gt;trusty&lt;/em&gt;, &lt;em&gt;precise&lt;/em&gt;, &lt;em&gt;yakkety&lt;/em&gt; o cualquier otro nombre chorra).&lt;/li&gt;
&lt;li&gt;Guarda el documento y ejecuta el clásico &lt;code&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade&lt;/code&gt; si ya tuvieras &lt;code&gt;R&lt;/code&gt; instalado, o &lt;code&gt;sudo apt-get install r-base-dev&lt;/code&gt; si vas a instalarlo en ese momento (te recomiendo la versión &lt;em&gt;dev&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Por último, queda añadir la clave para la certificación de paquetes instalados con &lt;code&gt;sudo apt-key adv –keyserver keyserver.ubuntu.com –recv-keys E084DAB9&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hay otras distros con un patrón de instalación mucho más sencillo: por ejemplo, ahora mismo soy usuario de una variante de &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt;, y gracias a &lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt; se puede instalar en un segundo. Arch Linux tiene la ventaja de ser una distro &lt;em&gt;Rolling Release&lt;/em&gt;, lo que implica que no hay que cambiar de versión cada año o así, reinstalando toda la retahíla de programas una y otra vez.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;instalar-y-actualizar-librerias&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Instalar y actualizar librerías&lt;/h2&gt;
&lt;p&gt;Desde que comencé a utilizar Linux me di cuenta de algo que ocurría con las librerías de &lt;code&gt;R&lt;/code&gt;, no solo es que haya que identificarse como superusuario a la hora de instalar el propio programa (de forma que las librerías que acompañan a &lt;code&gt;R&lt;/code&gt; por defecto se instalan en el directorio &lt;code&gt;/usr/lib/R/library&lt;/code&gt;, aunque hay formas de sortear este punto), sino que los paquetes se instalan en plan &lt;em&gt;source&lt;/em&gt;, de forma que no viene nada precompilado, incluyendo alguna dependencia de software (por ejemplo, prueba a instalar el paquete &lt;code&gt;rgeos&lt;/code&gt; sin más y verás lo que pasa…).&lt;/p&gt;
&lt;p&gt;Respecto al primer punto, en principio esto es una ventaja independientemente de que se trate de una máquina personal o compartida por varios usuarios donde más de uno utilice &lt;code&gt;R&lt;/code&gt;. Lo único es que, si quieres actualizar a mano los paquetes y eso incluye a alguno de los paquetes básicos, si se inicia la aplicación sin permisos de superusuario, las librerías se instalarán por defecto en el directorio del usuario que haya abierto la sesión (en principio este será &lt;code&gt;/home/pepitoflores/R/x86_64-pc-linux-gnu-library/version-de-R-que-uses&lt;/code&gt;), y a la hora de actualizar las librerías que requieren permisos (las que están instaladas en &lt;code&gt;/usr/lib/R/library&lt;/code&gt;), la consola nos devolverá un error. Esto se puede sortear de dos formas:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;abriendo &lt;code&gt;R&lt;/code&gt; como superusuario y actualizando los paquetes (&lt;code&gt;update.packages()&lt;/code&gt;) o,&lt;/li&gt;
&lt;li&gt;esperando a que se actualicen esos paquetes dentro del repositorio que empleamos para instalar el propio &lt;code&gt;R&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En relación al segundo punto, la verdad es que no hay una salida fácil: solo queda leer la documentación de los paquetes y ver posibles dependencias externas (algo habitual, por ejemplo, con los paquetes de estadística espacial), ver por dónde peta al instalarlo, y buscar e instalar los paquetes necesarios.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ultimos-apuntes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Últimos apuntes&lt;/h2&gt;
&lt;p&gt;Si trabajas en varios proyectos y te preocupa llevar un control de las librerías necesarias para correr un &lt;em&gt;script&lt;/em&gt; y aumentar así el nivel de reproducibilidad, prueba a utilizar la libraría &lt;a href=&#34;https://rstudio.github.io/packrat/&#34; title=&#34;packrat&#34;&gt;&lt;code&gt;packrat&lt;/code&gt;&lt;/a&gt;. Esto viene muy bien para tener un proyecto autosuficiente, con lo que el código que hace seis meses funcionó, hoy también funcionará.&lt;/p&gt;
&lt;p&gt;Por ahora eso es todo. Pasa un buen día. :)&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>

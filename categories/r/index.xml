<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Carlos Vergara-Hernández</title>
    <link>http://carlosvergara.github.io/categories/r/</link>
    <description>Recent content in R on Carlos Vergara-Hernández</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <copyright>&amp;copy; 2017 Carlos Vergara-Hernández</copyright>
    <lastBuildDate>Thu, 07 May 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="/categories/r/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Informes dinámicos con knitr</title>
      <link>http://carlosvergara.github.io/post/knitr/</link>
      <pubDate>Thu, 07 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://carlosvergara.github.io/post/knitr/</guid>
      <description>&lt;p&gt;Hola muchachada.&lt;/p&gt;
&lt;p&gt;Hoy la palangana viene repleta de… informes, ha oído usted bien (popularidad a tope).&lt;/p&gt;
&lt;div id=&#34;erase-una-vez-algo-llamado-ciencia&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Érase una vez… algo llamado ciencia&lt;/h2&gt;
&lt;p&gt;Pues eso, que esto de la ciencia está bastante bien. En serio, hay un punto en el que, tras hacer un par de análisis inspirados detectas un patrón y te viene un subidón de la hostia. A ver, no me malinterpetes, rara vez esa sensación acaba en algo mínimamente productivo, aunque la sensación mola.&lt;/p&gt;
&lt;p&gt;Bien, pues ahora empiezan a aparecer problemas, porque por si no lo sabías, esto de la ciencia parece ser que es algo colectivo&lt;/p&gt;
&lt;p&gt;Hasta hace bien poco, preparar un informe con las salidas de un análisis estadístico se me hacía poco menos que un castigo: sentía que mi dedicación caía en saco roto cada vez que había que realizar cambios en él tras pasar el primer panel de revisión, lo cual ocurre siempre. No obstante, eso fue hasta que me topé con la librería &lt;code&gt;knitr&lt;/code&gt; de &lt;code&gt;R&lt;/code&gt; (la cual es, sencillamente, maravillosa): ahora, mis informes salen al vuelo y no me importa nada si se añaden, retiran o editan variables de la base de datos o análisis estadísticos: el informe se actualizará fácilmente y quedará bien, sí o sí.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;manejo-de-knitr&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Manejo de &lt;code&gt;knitr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Tras las buenas palabras de presentación, veamos qué ofrece &lt;code&gt;knitr&lt;/code&gt;. Según la documentación, se trata de una herramienta genérica para generar informes dinámicos con &lt;code&gt;R&lt;/code&gt;, y aunque suene un poco raro, esto implica dos frentes, así habrá que discutirlos algo más en profundidad.&lt;/p&gt;
&lt;div id=&#34;a-hostias-con-el-informe&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;A hostias con el informe&lt;/h4&gt;
&lt;p&gt;Pongámonos en situación: has realizado un análisis estadístico sobre una base de datos y estás preparando el informe. Te pasas varias horas (o días, en función de la base de datos) copiando y pegando tablas y gráficos o, mucho peor, sufriendo la alienación que supone escribir todos los valores a mano. Tras ello, le llega el turno a la maquetación para que todo sea bonito y el informe solo necesite un lacito para ser enviado a quien corresponda, y esto también requiere un gran esfuerzo.&lt;/p&gt;
&lt;p&gt;Sin embargo, es habitual que a alguien se le ocurra algo que puede mejorar el análisis y el producto final, aunque solo con pensar en pasar una vez más por todo el proceso de &lt;em&gt;copia-pega&lt;/em&gt; por un cambio mínimo, puede amargarte tras de tanta dedicación. Y lo peor es que todo empieza con buenas intenciones y algo parecido a: &lt;strong&gt;y si…&lt;/strong&gt; &lt;em&gt;recodificamos esta variable&lt;/em&gt;, &lt;strong&gt;y si…&lt;/strong&gt; &lt;em&gt;en tal modelo probamos a introducir un factor aleatorio y vemos cómo quedan los residuos&lt;/em&gt; o, en el peor de los casos, &lt;strong&gt;y si…&lt;/strong&gt; &lt;em&gt;repetimos este análisis pero haciendo el pino mientras recitamos el Quijote&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;¿Alguna vez te ha pasado? Amigo investigador: no estás solo, y es precisamente ahí donde los informes dinámicos pueden sacarnos del apuro. La idea es muy simple: integrar trozos de código de análisis y las salidas de &lt;code&gt;R&lt;/code&gt; que producen (tanto texto como gráficos) en el informe que se esté preparando, de una manera natural y bastante fácil. ¿Tras la revisión de los compañeros se plantean cambios en el análisis? No pasa nada: al tener el código integrado el informe se genera de nuevo automáticamente con el código y las salidas actualizadas. Esto, que en principio parece poco relevante, implica que solo has de concentrarte en tu investigación: pensar en la mejor forma de análisis y en la interpretación de los resultados.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;herramienta-generica&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Herramienta genérica&lt;/h4&gt;
&lt;p&gt;En &lt;code&gt;R&lt;/code&gt; ya existía una librería para realizar informes dinámicos, pero estaba orientada exclusivamente a LaTeX. Con &lt;code&gt;knitr&lt;/code&gt; se pueden crear elementos en LaTeX, Markdown o HTML (y de ahí podemos pasarlos con &lt;a href=&#34;http://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt; a un editor de textos del tipo &lt;em&gt;WYSIWYG&lt;/em&gt; como &lt;a href=&#34;https://www.libreoffice.org/discover/writer/&#34;&gt;LO Writer&lt;/a&gt; o MS Word). Además, si a esto le añadimos las facilidades que ofrece &lt;a href=&#34;http://www.rstudio.com/&#34;&gt;RStudio&lt;/a&gt; a la hora de trabajar con &lt;code&gt;R&lt;/code&gt; y &lt;code&gt;knitr&lt;/code&gt;, las posibilidades son increíbles (incluyendo presentaciones con un acabado sensacional con &lt;a href=&#34;http://rmarkdown.rstudio.com/ioslides_presentation_format.html&#34;&gt;&lt;em&gt;ioslides&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;http://rmarkdown.rstudio.com/slidy_presentation_format.html&#34;&gt;&lt;em&gt;slidy&lt;/em&gt;&lt;/a&gt; o &lt;a href=&#34;http://rmarkdown.rstudio.com/beamer_presentation_format.html&#34;&gt;&lt;em&gt;beamer&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;trabajando-en-markdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Trabajando en Markdown&lt;/h2&gt;
&lt;p&gt;A la hora de escribir documentos que no requieran un manejo muy avanzado, &lt;a href=&#34;http://stackoverflow.com/editing-help&#34;&gt;Markdown&lt;/a&gt; es sin duda la elección —p. ej., y sin ir más lejos, todo lo que escribo en esta web está escrito en &lt;a href=&#34;https://github.com/carlosvergara/carlosvergara.github.io/tree/master/_Rmd&#34;&gt;Markdown directamente desde RStudio&lt;/a&gt; (el cual ofrece la posibilidad de conectar con &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;)—.&lt;/p&gt;
&lt;p&gt;Al trabajar con &lt;code&gt;knitr&lt;/code&gt; en este entorno, en primer lugar hay que identificar los trozos de código, y para ello escribimos &lt;code&gt;```{r}&lt;/code&gt;, indicando que comienza código, y &lt;code&gt;```&lt;/code&gt; para indicar el final de la pieza de código. En la &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;web del autor de &lt;code&gt;knitr&lt;/code&gt;&lt;/a&gt; podrás encontrar un montón de ejemplos y de opciones útiles para obtener la salida deseada: p. ej., imagina que deseas mostrar únicamente un resultado y omitir el código, pues la solución es añadir &lt;code&gt;echo = F&lt;/code&gt; en el encabezado (&lt;code&gt;```{r echo = F}&lt;/code&gt;); o que deseas que la figura que se produzca con un &lt;code&gt;plot(x)&lt;/code&gt; tenga un tamaño de 10 x 5, pues &lt;code&gt;```{r fig.width = 10, fig.height = 5}&lt;/code&gt;. Como ves, la sintaxis es muy sencilla y bastante intuitiva.&lt;/p&gt;
&lt;div id=&#34;un-ejemplo&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Un ejemplo&lt;/h4&gt;
&lt;p&gt;En primer lugar crearemos una base de datos ficticia (tres tratamientos para, p. ej., el exceso de colesterol) y se describirá la variable dependiente en función de la independiente&lt;a href=&#34;#fn1&#34; class=&#34;footnoteRef&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(knitr)
library(dplyr)
set.seed(1)
example &amp;lt;- data.frame(
  trat = gl(3, 100, labels = c(&amp;#39;Trat. 1&amp;#39;, &amp;#39;Trat. 2&amp;#39;, &amp;#39;Trat. 3&amp;#39;)),
  chol = as.vector(sapply(c(200, 160, 210), function(x) {
    rnorm(100, mean = x, sd = x/10)
    }))
)

mi_summary_table &amp;lt;- example %&amp;gt;%
  group_by(Tratamiento = trat) %&amp;gt;%
  summarise(N = n(),
            Media = mean(chol),
            SD = sd(chol),
            Mediana = median(chol),
            P25 = quantile(chol, 0.25),
            P75 = quantile(chol, 0.75),
            IQR = IQR(chol))

kable(mi_summary_table, digits = 2, caption = &amp;#39;Descriptiva según tratamiento&amp;#39;, align = &amp;quot;c&amp;quot;)  &lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:tabla&#34;&gt;Table 1: &lt;/span&gt;Descriptiva según tratamiento&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;Tratamiento&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;N&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Media&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;SD&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Mediana&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;P25&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;P75&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;IQR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Trat. 1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;202.18&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;17.96&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;202.28&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;190.12&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;213.83&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;23.72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Trat. 2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;159.40&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;15.33&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;157.16&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;149.58&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;168.01&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;18.43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;Trat. 3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;210.62&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;21.72&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;209.97&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;200.44&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;224.67&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;24.23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¿Has visto qué sencillez? Al combinar las capacidades para jugar con los datos de &lt;code&gt;dplyr&lt;/code&gt; y las posibilidades que ofrece &lt;code&gt;knitr&lt;/code&gt;, el resultado es una pasada. Vamos a ver qué tal se defiende con unos gráficos en &lt;code&gt;ggplot2&lt;/code&gt;, por ejemplo con un diagrama de cajas y un gráfico de densidades.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(grid)
library(gridExtra)
mi_theme &amp;lt;- theme(
  axis.title = element_text(size = 16, face = &amp;#39;bold&amp;#39;, family = &amp;#39;Times&amp;#39;),
  axis.text = element_text(size = 12, face = &amp;#39;plain&amp;#39;, family = &amp;#39;Times&amp;#39;),
  legend.text = element_text(face = &amp;#39;plain&amp;#39;, size = 12, family = &amp;#39;Times&amp;#39;),
  legend.title = element_text(face = &amp;#39;bold&amp;#39;, size = 16, family = &amp;#39;Times&amp;#39;),
  axis.title.y = element_text(vjust = 1),
  axis.title.x = element_text(vjust = 0),
  legend.position = c(.9, .8)
)
mi_box &amp;lt;- ggplot(example, aes(trat, chol)) + 
  geom_boxplot() + 
  theme_classic() +
  labs(x = &amp;#39;Tratamiento&amp;#39;, y = &amp;#39;Colesterol (mg./dl.)&amp;#39;, title = &amp;#39;&amp;#39;) +
  scale_y_continuous(limits = c(120, 260), breaks = seq(120, 260, 20)) +
  mi_theme
mi_den &amp;lt;- ggplot(example, aes(colour = trat, x = chol)) + geom_line(stat = &amp;#39;density&amp;#39;) +
  theme_classic() + scale_x_continuous(limits = c(120, 260), breaks = seq(120, 260, 20)) +
  labs(x = &amp;#39;Colesterol (mg./dl.)&amp;#39;, y = &amp;#39;Densidad&amp;#39;, title = &amp;#39;&amp;#39;, colour = &amp;#39;&amp;#39;) +
  mi_theme
grid.arrange(mi_box, mi_den, nrow = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://carlosvergara.github.io/post/knitr_files/figure-html/box.den-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sin duda, esto es adictivo. Pero ¿qué tal se ven los gráficos básicos, p. ej., de un ANOVA?&lt;a href=&#34;#fn2&#34; class=&#34;footnoteRef&#34; id=&#34;fnref2&#34;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_aov &amp;lt;- aov(chol ~ trat, example)
par(mar = c(4, 4, 1, 1), bty = &amp;#39;l&amp;#39;, family = &amp;#39;serif&amp;#39;, mgp = c(2, 0.5, 0), xaxs = &amp;#39;i&amp;#39;, yaxs = &amp;#39;i&amp;#39;)
layout(matrix(c(1, 2, 1, 2), byrow = T, ncol = 2))
plot(mi_aov$fitted.values, mi_aov$residuals, xlab = &amp;#39;Valores ajustados&amp;#39;,
                  ylab = &amp;#39;Residuos&amp;#39;, cex = 1.5, cex.lab = 1.3, col = 4,
                  xlim = c(150, 215), ylim = c(-60, 60))
abline(h = 0, lty = 2)
lines(lowess(mi_aov$fitted.values, mi_aov$residuals), col = 2)
qqnorm(mi_aov$residuals, xlab = &amp;#39;Cuantiles teóricos&amp;#39;, main = &amp;#39;&amp;#39;, cex = 1.5, 
                    ylab = &amp;#39;Cuantiles muestrales&amp;#39;, cex.lab = 1.3, col = 4,
                    xlim = c(-3, 3), ylim = c(-60, 60))
qqline(mi_aov$residuals, col = 2)
abline(h = 0, lty = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://carlosvergara.github.io/post/knitr_files/figure-html/aov.g-1.png&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(mi_aov)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              Df Sum Sq Mean Sq F value Pr(&amp;gt;F)    
## trat          2 150867   75433   219.9 &amp;lt;2e-16 ***
## Residuals   297 101904     343                   
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Las figuras quedan genial, aunque la impresión de la tabla de ANOVA es bastante cutre. ¿Se puede pasar por &lt;code&gt;kable&lt;/code&gt; y mejorarla? Sí, pero previamente hay que hacer algunas modificaciones.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_aov &amp;lt;- anova(mi_aov)
colnames(mi_aov) &amp;lt;- c(&amp;#39;Grados de libertad&amp;#39;, &amp;#39;Suma de cuadrados&amp;#39;, &amp;#39;Media de cuadrados&amp;#39;, &amp;#39;Valor F&amp;#39;, &amp;#39;Valor p&amp;#39;)
rownames(mi_aov) &amp;lt;- c(&amp;#39;Nivel&amp;#39;, &amp;#39;Residuos&amp;#39;)
kable(mi_aov, digits = 2, caption = &amp;#39;Tabla del ANOVA&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;(#tab:aov.tab)Tabla del ANOVA&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Grados de libertad&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Suma de cuadrados&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Media de cuadrados&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Valor F&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Valor p&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Nivel&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;150866.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;75433.29&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;219.85&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Residuos&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;297&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;101904.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;343.11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;proximos-pasos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Próximos pasos&lt;/h2&gt;
&lt;p&gt;Ya conoces un poco mejor la forma de trabajar con Markdown en &lt;code&gt;R&lt;/code&gt; gracias a &lt;code&gt;knitr&lt;/code&gt;. En un próximo artículo veremos cómo configurar algunas opciones de &lt;code&gt;knitr&lt;/code&gt; al comienzo del documento, y evitar así estar repitiendo los mismos encabezados una y otra vez. Asimismo, también me gustaría hablar un poquito sobre LaTeX y mostrar un una mínima parte de su potencial a la hora de encarar documentos largos y complejos.&lt;/p&gt;
&lt;p&gt;Por ahora eso es todo. Pasa un buen día. :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;He añadido algunas opciones extra en el encabezado de las piezas de código, tales como &lt;code&gt;message = F&lt;/code&gt; y &lt;code&gt;warning = F&lt;/code&gt;, de manera que se evita la aparición de mensajes que distraen de los datos.&lt;a href=&#34;#fnref1&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;Una forma más sencilla para echar un vistazo rápido a estos gráficos (sin tanta floritura) es con &lt;code&gt;par(mfrow = c(1, 2))&lt;/code&gt; seguido de &lt;code&gt;plot(mi.aov, which = c(1, 2))&lt;/code&gt;.&lt;a href=&#34;#fnref2&#34;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Intervalos de confianza bootstrap de un ajuste LOESS</title>
      <link>http://carlosvergara.github.io/post/loess/</link>
      <pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://carlosvergara.github.io/post/loess/</guid>
      <description>&lt;p&gt;Hola muchachada.&lt;/p&gt;
&lt;p&gt;Hoy la palangana viene repleta de… remuestreo para calcular un intervalo de confianza.&lt;/p&gt;
&lt;p&gt;Imaginemos que queremos hacer una regresión local y que tenemos interés en generar un intervalo de confianza al 95 % para dicho ajuste LOESS (que es lo que viene a significar &lt;em&gt;regresión local&lt;/em&gt;)… pues bien, una de las formas de hacerlo es mediante remuestreo &lt;em&gt;bootstrap&lt;/em&gt;. Esta idea, la del &lt;em&gt;bootstrap&lt;/em&gt;, me gusta mucho: generar un porrón de curvas y, en lugar de calcular un error estándar al que multiplicar por 1.96 para hallar el IC (asumiendo normalidad, algo bastante arriesgado), quedarse con los cuantiles 0.025 y 0.975 de los ajustes a modo de las bandas inferior y superior de un IC al 95 %.&lt;/p&gt;
&lt;p&gt;Pero vamos al meollo. Lo primero es generar unos datos con una asociación no lineal.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(1)
N &amp;lt;- 100
x &amp;lt;- rnorm(N, 0, 5)
y &amp;lt;- x + x^2 + x^3 - rnorm(N, 0, 500)
xy &amp;lt;- data.frame(x, y)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sobre estos datos ya se puede ajustar una regresión LOESS con las opciones que &lt;code&gt;R&lt;/code&gt; aplica por defecto, a saber: polinomio de segundo grado, familia gausiana y ancho de banda de 0.75. Para ello se emplea una única línea de código.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mi_loess &amp;lt;- loess(y ~ x, xy)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Y ya le llegó la hora al &lt;em&gt;bootstrap&lt;/em&gt;. En primer lugar cargamos la librería &lt;code&gt;boot&lt;/code&gt; —aunque hay otras librerías, he decidido emplear esta al acompañar a la instalación base de &lt;code&gt;R&lt;/code&gt; (puedes consultar algo de ayuda en relación a la librería y a la técnica &lt;a href=&#34;http://www.burns-stat.com/documents/tutorials/the-statistical-bootstrap-and-other-resampling-methods-2/&#34;&gt;aquí&lt;/a&gt;, &lt;a href=&#34;http://www.ats.ucla.edu/stat/r/library/bootstrap.htm&#34;&gt;aquí&lt;/a&gt; y también &lt;a href=&#34;http://www.statmethods.net/advstats/bootstrapping.html&#34;&gt;aquí&lt;/a&gt;) —.&lt;/p&gt;
&lt;p&gt;Para los que no lo sepan, el &lt;em&gt;bootstrap&lt;/em&gt; se puede resumir como una técnica que consiste en sacar un número de nuevos conjuntos de datos mediante un muestreo aleatorio con reemplazo aplicado sobre el conjunto original. Sobre estos conjuntos se calculará un estadístico, que en este caso es un ajuste de regresión, y como resultado se tiene un montón de ajustes (tantos como remuestreos se hayan realizado), y estos ajustes son muy útiles para, p. ej., calcular un IC.&lt;/p&gt;
&lt;p&gt;Como mejor se ve es en la práctica. Ahora que ya dispongo de unos datos ajustados (objeto &lt;code&gt;mi_loess&lt;/code&gt;), voy a crear una matriz, a la que llamaré &lt;code&gt;dat_res_aj&lt;/code&gt;, que contenga los datos originales, los ajustados y los residuos. A continuación se crea un &lt;code&gt;data.frame&lt;/code&gt; llamado &lt;code&gt;nuevos_datos&lt;/code&gt; compuesto por, p. ej., 100 valores desde el mínimo de la variable predictora hasta su máximo (&lt;span class=&#34;math inline&#34;&gt;\(\approx\)&lt;/span&gt; [-13.29, 14.41]): su papel reside como base para la función &lt;code&gt;predict&lt;/code&gt;, la cual se nutre de un &lt;code&gt;data.frame&lt;/code&gt; de nuevos valores para las variables independientes (aunque en este caso solo hay una) a los que aplicarles los distintos ajustes y predecir valores para la variable dependiente. Para finalizar con los preliminares, se genera el estadístico que se va a emplear en el &lt;em&gt;bootstrap&lt;/em&gt; (una función bautizada como &lt;code&gt;boot_loess&lt;/code&gt;). Ahora ya se está en condiciones de ejecutar el remuestreo, cuyo resultado se asignará a un objeto llamado &lt;code&gt;mi_boot&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(boot)
dat_res_aj &amp;lt;- cbind(xy, res = mi_loess$residuals, ajus = mi_loess$fitted)
nuevos_datos &amp;lt;- data.frame(x = seq(min(xy$x), max(xy$x), l = 100))
boot_loess &amp;lt;- function(datos, nuevosdatos, inds, alpha = 0.75) {
  aj_loess &amp;lt;- loess(ajus + res[inds] ~ x, span = alpha, data = datos)
  pred &amp;lt;- predict(aj_loess, nuevosdatos)
  return(pred)
}
mi_boot &amp;lt;- boot(data = dat_res_aj, statistic = boot_loess, R = 1000, nuevosdatos = nuevos_datos)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ya se ha realizado el remuestreo, pero ¿qué aspecto tiene el ajuste sobre los datos originales en comparación con las 1000 muestras &lt;em&gt;bootstrap&lt;/em&gt;? Vamos a averiguarlo: en primer lugar hay que visualizar el ajuste LOESS sobre los datos originales junto con el ajuste de una regresión lineal simple (a modo de comparación); después se dibujan los 1000 ajustes realizados sobre las muestras &lt;em&gt;bootstrap&lt;/em&gt;; y finalmente se selecciona a los cuantiles 0.025 y 0.975 de los ajustes del remuestreo, como los límites inferior y superior de un IC al 95 %. El código para todo esto lo explicará mejor.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;layout(matrix(c(1, 3, 2, 3), 2))
par(mar = c(3, 3, 3, 1), mgp = c(3.5, 1, 0), oma = c(2, 2, 0, 0), bty = &amp;#39;l&amp;#39;, xaxs = &amp;#39;i&amp;#39;, yaxs = &amp;#39;i&amp;#39;)
plot(xy$x, xy$y, xlim = c(-15, 15), ylim = c(-3000, 3000), pch = 19, 
     las = 1, xlab = &amp;#39;&amp;#39;, ylab = &amp;#39;&amp;#39;, main = &amp;#39;Ajuste sobre los datos originales&amp;#39;)

ajuste &amp;lt;- predict(mi_loess, nuevos_datos)
lines(nuevos_datos$x, ajuste, lty = 1)
abline(lm(y ~ x, data = xy), lty = 2)
legend(&amp;#39;topleft&amp;#39;, legend = c(&amp;#39;Ajuste LOESS&amp;#39;, &amp;#39;Ajuste lineal&amp;#39;), lty = c(1, 2), bty = &amp;#39;n&amp;#39;)

plot(xy$x, xy$y, xlim = c(-15, 15), ylim = c(-3000, 3000), pch = 19, 
     las = 1, xlab = &amp;#39;&amp;#39;, ylab = &amp;#39;&amp;#39;, main = &amp;#39;Ajuste sobre 1000 muestras bootstrap&amp;#39;)
apply(mi_boot$t, 1, function(x) lines(nuevos_datos$x, x, col = 4))

plot(xy$x, xy$y, xlim = c(-15, 15), ylim = c(-3000, 3000), pch = 19, 
     las = 1, xlab = &amp;#39;&amp;#39;, ylab = &amp;#39;&amp;#39;, main = &amp;#39;Ajuste LOESS con IC 95 % mediante bootstrap&amp;#39;)
lines(nuevos_datos$x, ajuste)
sapply(c(0.025, 0.975), function(x) {
  lines(nuevos_datos$x, apply(mi_boot$t, 2, quantile, probs = x), lty = 2, col = 4)
})
mtext(side = 1, text = &amp;quot;Variable X&amp;quot;, line = 0, outer = T)
mtext(side = 2, text = &amp;quot;Variable Y&amp;quot;, line = 0.5, outer = T, las = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-4&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;http://carlosvergara.github.io/post/loess_files/figure-html/unnamed-chunk-4-1.png&#34; alt=&#34;Ajuste sobre los datos originales, sobre todos los remuestros bootstrap y selección de un IC 95 % para el ajuste original&#34; width=&#34;1248&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Ajuste sobre los datos originales, sobre todos los remuestros bootstrap y selección de un IC 95 % para el ajuste original
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Y ya está todo. Como se puede ver, el ajuste lineal no es capaz de captar la variación de los datos, en tanto que el ajuste LOESS se adapta mucho mejor. Respecto al IC 95 % mediante &lt;em&gt;bootstrap&lt;/em&gt;, y al no haber mucho ruido en los datos, los ajustes de las 1000 muestras con reemplazo no sugieren grandes discrepancias respecto al ajuste inicial, lo cual se puede ver fácilmente al representar las bandas superior e inferior del IC y observar su proximidad.&lt;/p&gt;
&lt;p&gt;Pasa un buen día. :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
